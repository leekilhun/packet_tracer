/*include=======================================================================

NAME:		3dabm9.h
PURPOSE:	Header file for version 9.x of 3dabm9u.ocx

==============================================================================*/

// Constants for use with 3D Active Button Magic

#ifndef TDABM_H
#define TDABM_H
namespace LIB_BOTTON_3D
{

	enum Styles {
		STYLE_PUSHBUTTON,
		STYLE_CHECKBOX,
		STYLE_RADIOBUTTON,
		STYLE_FRAME,
		STYLE_PICTURE,
		STYLE_CHECKBOX_STD,
		STYLE_RADIOBUTTON_STD,
		STYLE_LABEL,
		STYLE_PROGRESS_BAR,
		STYLE_SPLIT_BUTTON,
		MAX_STYLES
	};

	enum Shapes {
		SHAPE_RECTANGLE,				// 0
		SHAPE_ROUNDRECT,				// 1
		SHAPE_PARALLEL,					// 2
		SHAPE_ELLIPSE,					// 3
		SHAPE_GEM,						// 4
		SHAPE_CUSTOM,					// 5
		SHAPE_TRIANGLE,					// 6
		SHAPE_TRAPEZE,					// 7
		SHAPE_ARROW,					// 8
		SHAPE_HONEYCOMB_VERT,			// 9
		SHAPE_HONEYCOMB_HORIZ,			// 10
		SHAPE_HONEYCOMB_45,				// 11
		SHAPE_HONEYCOMB_135,			// 12
		SHAPE_DIAMOND,					// 13
		SHAPE_KEYHOLE,					// 14
		SHAPE_4LEAFCLOVER_V,			// 15
		SHAPE_4LEAFCLOVER_D,			// 16
		SHAPE_ALFALFA,					// 17
		MAX_SHAPE						// 18
	};

	enum Grade {
		GRD_VERYHIGH,
		GRD_HIGH,
		GRD_AVERAGE,
		GRD_LOW,
		GRD_VERYLOW,
		MAX_GRD
	};

	enum SurfaceType {
		SURFACE_HARD,
		SURFACE_SOFT,
		SURFACE_FLAT,
		SURFACE_FLATPIL,
		SURFACE_SUNKEN,
		SURFACE_PLASTIC,
		SURFACE_LUCID,
		SURFACE_NEON,
		SURFACE_AQUA,
		SURFACE_GEL,
		SURFACE_PLASTIC_SHAPED,
		SURFACE_NEON_SHAPED,
		SURFACE_AQUA_SHAPED,
		SURFACE_GEL_SHAPED,
		SURFACE_VISTA_STYLE,
		SURFACE_OFFICE_2003,
		SURFACE_OFFICE_2007,
		MAX_SURFACE
	};

	enum TextPosition {
		TEXTPOS_CAPTION,
		TEXTPOS_LT,
		TEXTPOS_CT,
		TEXTPOS_RT,
		TEXTPOS_LM,
		TEXTPOS_RM,
		TEXTPOS_LB,
		TEXTPOS_CB,
		TEXTPOS_RB,
		MAX_TEXTPOS
	};

	enum PictPosition {
		PICTPOS_CM,
		PICTPOS_LT,
		PICTPOS_CT,
		PICTPOS_RT,
		PICTPOS_LM,
		PICTPOS_RM,
		PICTPOS_LB,
		PICTPOS_CB,
		PICTPOS_RB,
		PICTPOS_TILE,
		PICTPOS_STRETCH,
		PICTPOS_SIZETOCONTENT,
		MAX_PICTPOS
	};

	enum TranspModes {
		TRANSPMODE_USECOLOR,
		TRANSPMODE_USELEFTTOP_PIXEL,
		MAX_TRANSPMODES
	};

	enum TextEffects {
		EFFECT_NONE,
		EFFECT_RAISED,
		EFFECT_SUNKEN,
		EFFECT_FLOATING,
		EFFECT_HALO,
		EFFECT_RAISEDHALO,
		EFFECT_SUNKENHALO,
		EFFECT_FLOATINGHALO,
		MAX_TEXT_EFFECTS
	};

	enum SpecialEffects {
		SPECIAL_EFFECT_NONE,
		SPECIAL_EFFECT_RAISED,
		SPECIAL_EFFECT_SUNKEN,
		SPECIAL_EFFECT_SUNKEN_SIMPLE,
		MAX_SPECIAL_EFFECTS
	};

	enum FrameEffects {
		FRAME_EFFECT_RAISED,
		FRAME_EFFECT_SUNKEN,
		FRAME_EFFECT_SUNKEN_SIMPLE,
		FRAME_EFFECT_NONE,
		MAX_FRAME_EFFECTS
	};

	enum SpecialEffectsFactors {
		SPECEFF_VERYHIGH,
		SPECEFF_HIGH,
		SPECEFF_AVERAGE,
		SPECEFF_LOW,
		SPECEFF_VERYLOW,
		MAX_SPECEFF_FACTORS
	};

	enum Pictures {
		PICTURE_NORMAL,
		PICTURE_PRESSED,
		PICTURE_MOUSEOVER,
		PICTURE_CUSTOM,
		PICTURE_TEXTURE,
		PICTURE_DISABLED,
		PICTURE_SPLIT_BUTTON,
		MAX_PICTURES
	};

	enum Sounds {
		SOUND_DOWN,
		SOUND_UP,
		SOUND_MOUSEOVER,
		SOUND_MOUSEOUT,
		MAX_SOUNDS
	};

	enum Cursors {
		CURSOR_NORMAL,
		MAX_CURSORS
	};

	enum DllTypes {
		DLL_TYPE_PICTURE,
		DLL_TYPE_ANIM,
		DLL_TYPE_SOUND,
		MAX_DLL_TYPES
	};

	enum Smooth {
		SMOOTH_NONE,
		SMOOTH_LOW,
		SMOOTH_HIGH,
		MAX_SMOOTH
	};

	enum FocusMode {
		FOCUS_NONE,
		FOCUS_BORDER,
		FOCUS_COLOR,
		MAX_FOCUS
	};

	enum SurfaceColorElem {
		SURFACE_BACK,
		SURFACE_MO,
		SURFACE_FOCUS,
		SURFACE_INTERIOR,
		SURFACE_DISABLED,
		SURFACE_PRESSED,
		MAX_SURFACE_COLOR
	};

	enum TextureMode {
		TEXTURE_NONE,
		TEXTURE_WHOLE,
		TEXTURE_OUTSIDE,
		TEXTURE_INSIDE,
		MAX_TEXTURE
	};

	enum ColorRenderType {
		COLOR_RENDER_BEST_MATCH,
		COLOR_RENDER_BEST_3D,
		COLOR_RENDER_LINEAR_MATCH,
		COLOR_RENDER_HYPER_3D,
		COLOR_RENDER_2_COLORS,
		MAX_COLOR_RENDER
	};

	enum ColorGradientType {
		COLOR_GRADIENT_CLASSIC,
		COLOR_GRADIENT_LINEAR,
		MAX_COLOR_GRADIENT
	};

	enum ExportImage {
		EXPORT_IMAGE_NORMAL,
		EXPORT_IMAGE_MOUSEOVER,
		EXPORT_IMAGE_PRESSED,
		EXPORT_IMAGE_FOCUS,
		EXPORT_IMAGE_DISABLED,
		MAX_EXPORT_IMAGE
	};

	enum ExportFormat {
		EXPORT_FORMAT_BMP,
		EXPORT_FORMAT_PNG,
		EXPORT_FORMAT_JPG,
		EXPORT_FORMAT_CLIPBOARD,
		EXPORT_FORMAT_GIF,
		EXPORT_FORMAT_GIF_TRANSP,
		EXPORT_FORMAT_PNG_TRANSP,
		MAX_EXPORT_FORMAT
	};

	enum PillowFactor {
		PILLOW_VERYLOW,
		PILLOW_LOW,
		PILLOW_AVERAGE,
		PILLOW_HIGH,
		PILLOW_VERYHIGH,
		MAX_PILLOW_FACTOR
	};

	enum ShadowModes {
		SHADOW_NONE,
		SHADOW_SOLID,
		SHADOW_HALFBLURRED,
		SHADOW_BLURRED,
		MAX_SHADOW_MODES
	};

	enum Orientation {
		DIR_ALL,
		DIR_WEST,
		DIR_NORTH,
		DIR_EAST,
		DIR_SOUTH,
		DIR_NW,
		DIR_NE,
		DIR_SE,
		DIR_SW,
		MAX_DIRS
	};

	enum CaptionAlign {
		ALIGN_LEFT,
		ALIGN_CENTER,
		ALIGN_RIGHT,
		MAX_ALIGNS
	};

	enum TplBinTypeMode {
		RT_TPL_TYPE_PICTURE,
		RT_TPL_TYPE_TEXTURE,
		RT_TPL_TYPE_SOUND,
		RT_TPL_TYPE_CURSOR
	};

	enum ImageLayouts {
		LAYOUT_NONE,
		LAYOUT_TILE,
		LAYOUT_CENTER,
		LAYOUT_STRETCH,
		LAYOUT_ZOOM,
		MAX_LAYOUTS
	};

	enum HorizontalAlign {
		HALIGN_LEFT,
		HALIGN_CENTER,
		HALIGN_RIGHT,
		MAX_HALIGNS
	};

	enum VerticalAlign {
		VALIGN_TOP,
		VALIGN_CENTER,
		VALIGN_BOTTOM,
		MAX_VALIGNS
	};

	enum ActiveAnimations {
		ANIM_NONE,
		ANIM_NORMAL,
		ANIM_MOUSEOVER,
		ANIM_PRESSED
	};

	enum CellPictures {
		CELL_PICTURE,
		CELL_PICTURE_DISABLED,
		MAX_CELL_PICTURES
	};

	enum LightDirections {
		LIGHT_DIR_NW,
		LIGHT_DIR_NORTH,
		LIGHT_DIR_NE,
		LIGHT_DIR_EAST,
		LIGHT_DIR_SE,
		LIGHT_DIR_SOUTH,
		LIGHT_DIR_SW,
		LIGHT_DIR_WEST,
		LIGHT_DIR_ABOVE,
		MAX_LIGHT_DIRS
	};

	enum TransparentZones {
		TRANSP_ZONE_WHOLE,
		TRANSP_ZONE_OUTSIDE,
		TRANSP_ZONE_INSIDE,
		MAX_TRANSP_ZONES
	};

	enum VistaLooks {
		VISTA_LOOK_STANDARD,
		VISTA_LOOK_HOVER,
		VISTA_LOOK_CHECKED,
		VISTA_LOOK_FLAT,
		MAX_VISTA_LOOKS
	};

	enum VistaGlossyShapes {
		VISTA_GLOSSY_SHAPE_RECT,
		VISTA_GLOSSY_SHAPE_ELLIPSE_LARGE,
		VISTA_GLOSSY_SHAPE_ELLIPSE_MIDDLE,
		VISTA_GLOSSY_SHAPE_ELLIPSE_SMALL,
		MAX_VISTA_GLOSSY_SHAPES
	};

	enum SpotlightTypes {
		SPOTLIGHT_TYPE_RADIAL,
		SPOTLIGHT_TYPE_LINEAR,
		SPOTLIGHT_TYPE_BELL_SHAPED,
		MAX_SPOTLIGHT_TYPES
	};

	enum ScaleUnits {
		CELL_SCALE_UNIT_PERCENTAGE,
		CELL_SCALE_UNIT_PIXELS,
		MAX_CELL_SCALE_UNITS
	};

	enum ProgressBarTypes {
		PROGRESS_BAR_HORIZONTAL_WE,
		PROGRESS_BAR_HORIZONTAL_EW,
		PROGRESS_BAR_VERTICAL_SN,
		PROGRESS_BAR_VERTICAL_NS,
		PROGRESS_BAR_RADIAL_0_CW,
		PROGRESS_BAR_RADIAL_90_CW,
		PROGRESS_BAR_RADIAL_180_CW,
		PROGRESS_BAR_RADIAL_270_CW,
		PROGRESS_BAR_RADIAL_0_ACW,
		PROGRESS_BAR_RADIAL_90_ACW,
		PROGRESS_BAR_RADIAL_180_ACW,
		PROGRESS_BAR_RADIAL_270_ACW,
		MAX_PROGRESS_BAR_TYPES
	};

	enum ProgressBarFills {
		PROGRESS_BAR_FILL_WHOLE,
		PROGRESS_BAR_FILL_OUTSIDE,
		PROGRESS_BAR_FILL_INSIDE,
		MAX_PROGRESS_BAR_FILLS
	};

	enum SplitButtonPosition {
		SPLIT_BUTTON_TYPE_VERTICAL_LEFT,
		SPLIT_BUTTON_TYPE_HORIZONTAL_BOTTOM,
		MAX_SPLIT_BUTTON_TYPES
	};


	////////////////////////////////////////////////////
	// obsolete data maintained only for compatibility /
	// with previous versions of the control		   /
	////////////////////////////////////////////////////

	enum AngleType {
		ANGLE_0,
		ANGLE_90COUNTCLOCK,
		ANGLE_45COUNTCLOCK,
		ANGLE_45CLOCK,
		ANGLE_90CLOCK,
		MAX_ANGLE
	};

	enum HelpLinks {
		HLP_MAIN_PAGE,
		HLP_SHAPE_DLG,
		HLP_TEXT_DLG,
		HLP_COLOR_DLG,
		HLP_PICT_DLG,
		HLP_GRAPH_DLG,
		HLP_TEXTURE_DLG,
		HLP_RES_DLG,
		HLP_HYPERLINK_DLG,
		HLP_BEHAV_DLG,
		MAX_HELP_LINKS
	};

	enum TplMode {
		RT_TPL_MODE_NORMAL,
		RT_TPL_MODE_EX
	};

#define	STS_NOCOLOR			0x01
#define	STS_NOCOLOR_MO		0x02
#define	STS_NOCOLOR_PRESSED	0x04
#define	STS_NOXOFFSET		0x08
#define	STS_NOYOFFSET		0x10
#define	STS_NOEFFECT		0x20
#define	STS_NOFACTOR		0x40
#define	STS_NOANGLE			0x80

#define SEB_BTN_HELP		0x0001
#define SEB_BTN_SHAPE		0x0002
#define SEB_BTN_TEXT		0x0004
#define SEB_BTN_COLOR		0x0008
#define SEB_BTN_PICTS		0x0010
#define SEB_BTN_GRAPH		0x0020
#define SEB_BTN_TEXTURE		0x0040
#define SEB_BTN_SOUNDS		0x0080
#define SEB_BTN_HYPERL		0x0100
#define SEB_BTN_SAVETPL		0x0200
#define SEB_BTN_LOADTPL		0x0400
#define SEB_BTN_REFRESH		0x0800
#define SEB_BTN_BEHAV		0x1000


	// defined types
	typedef struct {
		COLORREF	colorNormal;
		COLORREF	colorMouseOver;
		COLORREF	colorPressed;
		short		xOffset;
		short		yOffset;
		short		iEffect;
		short		nFactor;
		short		nAngle;
	} TEXT_DESC;

	typedef struct {
		COLORREF	color;
		short		nGradientFactor;
		short		nRender3D;
	} SURFACE_COLOR_DESC;

}
#endif // TDABM_H
